version: 2.1

orbs:
  sonarcloud: sonarsource/sonarcloud@1.1.0 # SonarCloud Orbs
  maven: circleci/maven@1.3.0
  browser-tools: circleci/browser-tools@1.1.3
  slack: circleci/slack@4.10.1

general:
# comment the following if you do not wanted to specify any branches
  branches:
    only:
      - dev # specific branch
      - master
      - qa
      - release
      - hotfix
      - /dev-.*/ # or regexes

jobs:

  build:
    machine:
      image: ubuntu-2004:202201-02
    working_directory: ~/ci_app
    environment:
      # From https://developer.salesforce.com/docs/atlas.en-us.sfdx_setup.meta/sfdx_setup/sfdx_setup_install_cli_standalone.htm
      - DX_CLI_URL: https://developer.salesforce.com/media/salesforce-cli/sfdx-linux-amd64.tar.xz
    steps:
      - checkout
      - run:
          name: Download SFDX CLI
          command: |
            mkdir sfdx
            wget -qO- $DX_CLI_URL | tar xJ -C sfdx --strip-components 1
      - run:
          name: Install SFDX CLI
          command: |
            ./sfdx/install
            sfdx
            mkdir tmp
      - run:
          name: Setup SFDC Org
          command: |
            sfdx force:auth:jwt:grant --clientid $HUB_CONSUMER_KEY --jwtkeyfile ~/ci_app/assets/server.key --username $HUB_SFDC_USER --setdefaultdevhubusername -a hub
            sfdx force --help
      - run:
          name: Create Scratch Org
          command: |
            sfdx force:org:create -s -f ~/ci_app/config/project-scratch-def.json -a circle_build_$CIRCLE_BUILD_NUM --wait 10
      - run:
          name: Push Metadta to Scratch Org
          command: |
            sfdx force:source:push -u circle_build_$CIRCLE_BUILD_NUM
      - run:
          name: Open the Scratch Scratch Org
          command: |
            sfdx force:org:open -u circle_build_$CIRCLE_BUILD_NUM

      - run:
          name: Assign the Permission Set to User
          command: |
            sfdx force:user:permset:assign -n yeurdreamin -u circle_build_$CIRCLE_BUILD_NUM --json

      - run:
          name: Import the data to Scratch Org
          command: |
            sfdx force:data:tree:import --plan ~/ci_app/data/data-plan.json -u circle_build_$CIRCLE_BUILD_NUM --json
      - run:
          name: Run Apex Tests
          command: |
            echo 'Running tests'
            mkdir -p ~/junit
            sfdx force:apex:test:run --testlevel RunLocalTests
      - store_test_results:
          path: ~/junit
      - run:
          name: Delete Useless Scratch Org
          command: |
            sfdx force:org:delete -u circle_build_$CIRCLE_BUILD_NUM -p

      - run:
          name: Create Package Version
          command: |
            #Create package version
            PACKAGEVERSION="$(sfdx force:package:version:create --package "quickbooksonline" --installationkeybypass --wait 10 --json --targetdevhubusername HubOrg | jq '.result.SubscriberPackageVersionId' | tr -d '"')"
            echo 'PackageVersionId - ' ${PACKAGEVERSION}
            # Store PackageVersionId to be used in future step
            echo $PACKAGEVERSION > /tmp/packageversion.txt

workflows:
  ci-cd-workflow:
    jobs:
      - build